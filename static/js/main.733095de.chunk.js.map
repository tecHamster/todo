{"version":3,"sources":["utils/fetchClient.ts","types/ErrorMessages.ts","api/todos.ts","types/FilterParams.ts","api/users.ts","components/AuthForm.tsx","stores/TodosContext.tsx","components/ErrorNotification.tsx","components/Footer.tsx","components/TodoItem.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","ErrorMessages","client","updateTodo","todo","id","FilterParams","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","placeholder","disabled","value","required","onChange","e","target","minLength","initialState","mainInput","todos","completedTodos","unCompletedTodos","errorText","None","idsToChange","setTodos","setIdsToChange","showError","deleteTodo","TodosContext","React","createContext","TodosProvider","children","setUser","setErrorText","useRef","useMemo","filter","completed","timerId","message","window","clearTimeout","current","todosFromServer","catch","Loading","state","todoId","prevIds","prev","Delete","finally","prevTodos","prevId","focus","updatedTodo","todosAPI","nextTodos","index","findIndex","splice","Update","Provider","ErrorNotification","useContext","data-cy","hidden","aria-label","onClick","Footer","filterBy","setFilterBy","todosCounter","length","handleFilter","href","selected","All","Active","Completed","forEach","TodoItem","isUpdating","editing","setEditing","title","newTitle","setNewTitle","input","handleDoubleClick","changeTitle","trim","newTodo","prevTodo","blur","toString","aria-labelledby","checked","ref","onBlur","onKeyUp","key","onDoubleClick","App","preparedTodos","setTitle","tempTodo","setTempTodo","active","prevTitle","userId","addTodo","Add","EmptyTitle","TransitionGroup","map","CSSTransition","timeout","includes","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.733095de.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(100)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","/* eslint-disable no-shadow */\nexport enum ErrorMessages {\n  None = '',\n  Loading = 'Unable to load todos',\n  EmptyTitle = 'Title should not be empty',\n  Add = 'Unable to add a todo',\n  Delete = 'Unable to delete a todo',\n  Update = 'Unable to update a todo',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (newTodo: Todo) => {\n  return client.post<Todo>('/todos', newTodo);\n};\n\nexport const removeTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const updateTodo = (todo: Todo) => {\n  return client.patch<Todo>(`/todos/${todo.id}`, todo);\n};\n\n// Add more methods here\n","/* eslint-disable no-shadow */\nexport enum FilterParams {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../api/users';\nimport { User } from '../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, [onLogin]);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            name=\"emialToRegister\"\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              name=\"name\"\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useMemo,\n} from 'react';\nimport * as todosAPI from '../api/todos';\nimport { ErrorMessages } from '../types/ErrorMessages';\nimport { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\nimport { AuthForm } from '../components/AuthForm';\nimport { User } from '../types/User';\n\ntype SetTodos = (prev: Todo[]) => Todo[];\ntype SetIds = (prev: number[]) => number[];\n\ninterface State {\n  user: null | User,\n  mainInput: React.RefObject<HTMLInputElement> | null,\n  todos: Todo[],\n  completedTodos: Todo[],\n  unCompletedTodos: Todo[],\n  errorText: ErrorMessages,\n  loading: boolean,\n  idsToChange: number[],\n  setTodos: (v: SetTodos) => void,\n  setLoading: (v: boolean) => void,\n  setIdsToChange: (v: SetIds) => void,\n  showError: (v: ErrorMessages) => void,\n  deleteTodo: (id: number) => void,\n  updateTodo: (todo: Todo) => void,\n}\n\nconst initialState: State = {\n  user: null,\n  mainInput: null,\n  todos: [],\n  completedTodos: [],\n  unCompletedTodos: [],\n  errorText: ErrorMessages.None,\n  loading: false,\n  idsToChange: [],\n  setTodos: () => { },\n  setLoading: () => { },\n  setIdsToChange: () => { },\n  showError: () => { },\n  deleteTodo: () => { },\n  updateTodo: () => { },\n};\n\nexport const TodosContext = React.createContext<State>(initialState);\n\ntype Props = {\n  children: React.ReactNode,\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [errorText, setErrorText] = useState<ErrorMessages>(ErrorMessages.None);\n  const [loading, setLoading] = useState(false);\n  const [idsToChange, setIdsToChange] = useState<number[]>([]);\n  const mainInput = useRef<HTMLInputElement>(null);\n  const completedTodos = useMemo(() => {\n    return todos.filter(todo => todo.completed);\n  }, [todos]);\n\n  const unCompletedTodos = useMemo(() => {\n    return todos.filter(todo => !todo.completed);\n  }, [todos]);\n\n  const timerId = useRef(0);\n\n  function showError(message: ErrorMessages) {\n    window.clearTimeout(timerId.current);\n\n    setErrorText(message);\n\n    if (!message) {\n      return;\n    }\n\n    timerId.current = window.setTimeout(() => {\n      setErrorText(ErrorMessages.None);\n    }, 3000);\n  }\n\n  function deleteTodo(id: number) {\n    setIdsToChange(prevIds => [...prevIds, id]);\n    setLoading(true);\n    todosAPI.removeTodo(id)\n      .then(() => {\n        setTodos(prev => prev.filter(todo => todo.id !== id));\n      })\n      .catch(() => showError(ErrorMessages.Delete))\n      .finally(() => {\n        setLoading(false);\n        setIdsToChange(prevTodos => prevTodos.filter(prevId => prevId !== id));\n        mainInput?.current?.focus();\n      });\n  }\n\n  function updateTodo(updatedTodo: Todo) {\n    setLoading(true);\n    setIdsToChange(prevIds => [...prevIds, updatedTodo.id]);\n    todosAPI.updateTodo(updatedTodo)\n      .then(() => setTodos(prevTodos => {\n        const nextTodos = [...prevTodos];\n        const index = nextTodos.findIndex(todo => todo.id === updatedTodo.id);\n\n        nextTodos.splice(index, 1, updatedTodo);\n\n        return nextTodos;\n      }))\n      .catch(() => showError(ErrorMessages.Update))\n      .finally(() => {\n        setLoading(false);\n        setIdsToChange(prevIds => prevIds.filter(id => {\n          return id !== updatedTodo.id;\n        }));\n      });\n  }\n\n  useEffect(() => {\n    if (user) {\n      client.get<Todo[]>(`/todos?userId=${user.id}`)\n        .then(todosFromServer => setTodos(todosFromServer))\n        .catch(() => showError(ErrorMessages.Loading));\n    }\n  }, [user]);\n\n  const state: State = {\n    user,\n    todos,\n    mainInput,\n    completedTodos,\n    unCompletedTodos,\n    errorText,\n    loading,\n    idsToChange,\n    setTodos,\n    setLoading,\n    setIdsToChange,\n    showError,\n    deleteTodo,\n    updateTodo,\n  };\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <TodosContext.Provider value={state}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { TodosContext } from '../stores/TodosContext';\nimport { ErrorMessages } from '../types/ErrorMessages';\n\nexport const ErrorNotification: React.FC = () => {\n  const {\n    errorText,\n    showError,\n  } = useContext(TodosContext);\n\n  const handleCloseClick = () => showError(ErrorMessages.None);\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className={classNames(\n        'notification',\n        'is-danger',\n        's-light',\n        'has-text-weight-normal', {\n          hidden: !errorText,\n        },\n      )}\n    >\n      <button\n        aria-label=\"Hide notification\"\n        data-cy=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={handleCloseClick}\n      />\n      {errorText}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { TodosContext } from '../stores/TodosContext';\nimport { FilterParams } from '../types/FilterParams';\n\ntype Props = {\n  filterBy: FilterParams;\n  setFilterBy: (v: FilterParams) => void;\n};\n\nexport const Footer: React.FC<Props> = ({ filterBy, setFilterBy }) => {\n  const {\n    deleteTodo,\n    todos,\n    unCompletedTodos,\n    completedTodos,\n  } = useContext(TodosContext);\n\n  const todosCounter = unCompletedTodos.length;\n\n  const handleFilter = (filter: FilterParams) => {\n    return (e: React.MouseEvent<HTMLAnchorElement>) => {\n      e.preventDefault();\n      setFilterBy(filter);\n    };\n  };\n\n  function handleDeleteCompleted() {\n    todos\n      .filter(({ completed }) => completed)\n      .forEach(({ id }) => deleteTodo(id));\n  }\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"TodosCounter\">\n        {`${todosCounter} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          href=\"#/\"\n          className={\n            classNames('filter__link', {\n              selected: filterBy === FilterParams.All,\n            })\n          }\n          data-cy=\"FilterLinkAll\"\n          onClick={handleFilter(FilterParams.All)}\n        >\n          All\n        </a>\n\n        <a\n          href=\"#/active\"\n          className={\n            classNames('filter__link', {\n              selected: filterBy === FilterParams.Active,\n            })\n          }\n          data-cy=\"FilterLinkActive\"\n          onClick={handleFilter(FilterParams.Active)}\n        >\n          Active\n        </a>\n\n        <a\n          href=\"#/completed\"\n          className={\n            classNames('filter__link', {\n              selected: filterBy === FilterParams.Completed,\n            })\n          }\n          data-cy=\"FilterLinkCompleted\"\n          onClick={handleFilter(FilterParams.Completed)}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        disabled={completedTodos.length === 0}\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        data-cy=\"ClearCompletedButton\"\n        onClick={handleDeleteCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, {\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { TodosContext } from '../stores/TodosContext';\nimport { Todo } from '../types/Todo';\nimport { ErrorMessages } from '../types/ErrorMessages';\nimport * as todosAPI from '../api/todos';\n\ntype Props = {\n  todo: Todo,\n  isUpdating: boolean,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  isUpdating,\n}) => {\n  const {\n    deleteTodo,\n    updateTodo,\n    setLoading,\n    setIdsToChange,\n    setTodos,\n    showError,\n  } = useContext(TodosContext);\n\n  const [editing, setEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(todo.title);\n  const input = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      input.current?.focus();\n      setNewTitle(todo.title);\n    }, 0);\n  }, [editing, todo.title]);\n\n  const handleDelete = () => deleteTodo(todo.id);\n\n  const toggleTodo = () => {\n    const newTodo: Todo = {\n      ...todo,\n      completed: !todo.completed,\n    };\n\n    updateTodo(newTodo);\n  };\n\n  function handleDoubleClick() {\n    setEditing(true);\n    input.current?.focus();\n  }\n\n  function changeTitle() {\n    if (newTitle === todo.title || isUpdating) {\n      return;\n    }\n\n    if (newTitle.trim() !== todo.title && newTitle.trim()) {\n      const newTodo = {\n        ...todo,\n        title: newTitle.trim(),\n      };\n\n      setLoading(true);\n      setIdsToChange(prevIds => [...prevIds, newTodo.id]);\n\n      todosAPI.updateTodo(newTodo)\n        .then(() => setTodos(prevTodos => {\n          const nextTodos = [...prevTodos];\n          const index = nextTodos.findIndex(prevTodo => {\n            return prevTodo.id === newTodo.id;\n          });\n\n          nextTodos.splice(index, 1, newTodo);\n          input.current?.blur();\n\n          return nextTodos;\n        }))\n        .catch(() => {\n          showError(ErrorMessages.Update);\n          handleDoubleClick();\n        })\n        .finally(() => {\n          setLoading(false);\n          setIdsToChange(prevIds => prevIds.filter(id => {\n            return id !== newTodo.id;\n          }));\n        });\n\n      return;\n    }\n\n    if (newTitle.trim().length === 0) {\n      deleteTodo(todo.id);\n      input.current?.blur();\n    }\n  }\n\n  function handleBlur() {\n    setEditing(false);\n    changeTitle();\n  }\n\n  function handleInputClick(e: React.KeyboardEvent<HTMLInputElement>) {\n    if (e.key === 'Escape') {\n      setEditing(false);\n\n      return;\n    }\n\n    if (e.key === 'Enter') {\n      changeTitle();\n      setEditing(false);\n    }\n  }\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={classNames('todo', {\n        completed: todo.completed,\n      })}\n    >\n      <label className=\"todo__status-label\" id={todo.id.toString()}>\n        <input\n          aria-label=\"Change todo title\"\n          aria-labelledby={todo.id.toString()}\n          name={todo.id.toString()}\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={todo.completed}\n          onChange={toggleTodo}\n        />\n      </label>\n\n      {editing ? (\n        <input\n          name=\"mainInput\"\n          data-cy=\"TodoTitleField\"\n          type=\"text\"\n          className=\"todo__title-field\"\n          ref={input}\n          value={newTitle}\n          onChange={(e) => setNewTitle(e.target.value)}\n          onBlur={handleBlur}\n          onKeyUp={handleInputClick}\n        />\n      ) : (\n        <>\n          <span\n            data-cy=\"TodoTitle\"\n            className=\"todo__title\"\n            onDoubleClick={handleDoubleClick}\n          >\n            {todo.title}\n          </span>\n\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            data-cy=\"TodoDelete\"\n            onClick={handleDelete}\n          >\n            ×\n          </button>\n        </>\n      )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={classNames('modal', 'overlay', {\n          'is-active': isUpdating,\n        })}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\nimport React, {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { addTodo } from './api/todos';\nimport { ErrorNotification } from './components/ErrorNotification';\nimport { Footer } from './components/Footer';\nimport { TodoItem } from './components/TodoItem';\nimport { TodosContext } from './stores/TodosContext';\nimport { ErrorMessages } from './types/ErrorMessages';\nimport { FilterParams } from './types/FilterParams';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const {\n    user,\n    todos,\n    mainInput,\n    completedTodos,\n    unCompletedTodos,\n    loading,\n    setTodos,\n    setLoading,\n    showError,\n    updateTodo,\n    idsToChange,\n  } = useContext(TodosContext);\n\n  const [title, setTitle] = useState('');\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState(FilterParams.All);\n\n  useEffect(() => {\n    mainInput?.current?.focus();\n  }, [mainInput, todos]);\n\n  let preparedTodos;\n\n  switch (filterBy) {\n    case FilterParams.All:\n    default:\n      preparedTodos = todos;\n      break;\n\n    case FilterParams.Completed:\n      preparedTodos = completedTodos;\n      break;\n\n    case FilterParams.Active:\n      preparedTodos = unCompletedTodos;\n      break;\n  }\n\n  function handleTitleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setTitle(e.target.value);\n    showError(ErrorMessages.None);\n  }\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    if (title.trim().length === 0) {\n      showError(ErrorMessages.EmptyTitle);\n\n      return;\n    }\n\n    if (!user) {\n      return;\n    }\n\n    setLoading(true);\n    setTitle(prevTitle => prevTitle.trim());\n\n    const newTodo = {\n      title: title.trim(),\n      completed: false,\n      id: 0,\n      userId: user.id,\n    };\n\n    setTempTodo(newTodo);\n\n    addTodo(newTodo)\n      .then((response) => {\n        setTitle('');\n        setTodos((prevTodos) => [...prevTodos, response]);\n        setTempTodo(null);\n      })\n      .catch(() => {\n        showError(ErrorMessages.Add);\n        setTempTodo(null);\n      })\n      .finally(() => {\n        setLoading(false);\n        setTimeout(() => {\n          mainInput?.current?.focus();\n        }, 0);\n      });\n  }\n\n  function toggleAll() {\n    if (unCompletedTodos.length > 0) {\n      unCompletedTodos.forEach(todo => {\n        const newTodo = {\n          ...todo,\n          completed: !todo.completed,\n        };\n\n        updateTodo(newTodo);\n      });\n    } else {\n      completedTodos.forEach(todo => {\n        const newTodo = {\n          ...todo,\n          completed: !todo.completed,\n        };\n\n        updateTodo(newTodo);\n      });\n    }\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          {todos.length > 0 && (\n            <button\n              type=\"button\"\n              aria-label=\"Toggle all todos\"\n              className={classNames('todoapp__toggle-all', {\n                active: completedTodos.length === todos.length,\n              })}\n              data-cy=\"ToggleAllButton\"\n              onClick={toggleAll}\n            />\n          )}\n\n          <form onSubmit={handleSubmit}>\n            <input\n              name=\"mainInput\"\n              data-cy=\"NewTodoField\"\n              type=\"text\"\n              className=\"todoapp__new-todo\"\n              placeholder=\"What needs to be done?\"\n              disabled={loading}\n              ref={mainInput}\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </form>\n        </header>\n\n        <section className=\"todoapp__main\" data-cy=\"TodoList\">\n\n          <TransitionGroup>\n            {preparedTodos.map(todo => (\n              <CSSTransition\n                key={todo.id}\n                timeout={300}\n                classNames=\"item\"\n              >\n                <TodoItem\n                  key={todo.id}\n                  todo={todo}\n                  isUpdating={idsToChange.includes(todo.id)}\n                />\n              </CSSTransition>\n            ))}\n\n            {tempTodo && (\n              <CSSTransition\n                key={0}\n                timeout={300}\n                classNames=\"temp-item\"\n              >\n                <TodoItem\n                  todo={tempTodo}\n                  isUpdating\n                />\n\n              </CSSTransition>\n            )}\n\n          </TransitionGroup>\n        </section>\n\n        {!!todos.length && (\n          <Footer\n            filterBy={filterBy}\n            setFilterBy={setFilterBy}\n          />\n        )}\n      </div>\n\n      <ErrorNotification />\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { TodosProvider } from './stores/TodosContext';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <TodosProvider>\n      <App />\n    </TodosProvider>,\n  );\n"],"sourceRoot":""}